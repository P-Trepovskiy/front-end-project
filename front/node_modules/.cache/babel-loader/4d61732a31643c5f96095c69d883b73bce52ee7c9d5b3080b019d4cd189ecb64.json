{"ast":null,"code":"import axios from \"axios\";\nconst $host = axios.create({\n  baseURL: process.env.REACT_APP_API_URL\n});\nconst $authHost = axios.create({\n  baseURL: process.env.REACT_APP_API_URL\n});\nconst authInterceptor = config => {\n  if (config.url !== '/registration' && config.url !== '/login') {\n    config.headers.authorization = `Bearer ${localStorage.getItem('token')}`;\n  }\n  return config;\n};\n$authHost.interceptors.request.use(authInterceptor);\n$host.interceptors.request.use(authInterceptor);\nexport { $host, $authHost };","map":{"version":3,"names":["axios","$host","create","baseURL","process","env","REACT_APP_API_URL","$authHost","authInterceptor","config","url","headers","authorization","localStorage","getItem","interceptors","request","use"],"sources":["C:/Users/Паша/Desktop/front-end-project/front/src/http/index.js"],"sourcesContent":["import axios from \"axios\";\n\nconst $host = axios.create({\n    baseURL: process.env.REACT_APP_API_URL\n});\n\nconst $authHost = axios.create({\n    baseURL: process.env.REACT_APP_API_URL\n});\n\nconst authInterceptor = config => {\n    if (config.url !== '/registration' && config.url !== '/login') {\n        config.headers.authorization = `Bearer ${localStorage.getItem('token')}`;\n    }\n    return config;\n};\n\n$authHost.interceptors.request.use(authInterceptor);\n$host.interceptors.request.use(authInterceptor);\n\nexport {\n    $host,\n    $authHost\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC;AACzB,CAAC,CAAC;AAEF,MAAMC,SAAS,GAAGP,KAAK,CAACE,MAAM,CAAC;EAC3BC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC;AACzB,CAAC,CAAC;AAEF,MAAME,eAAe,GAAGC,MAAM,IAAI;EAC9B,IAAIA,MAAM,CAACC,GAAG,KAAK,eAAe,IAAID,MAAM,CAACC,GAAG,KAAK,QAAQ,EAAE;IAC3DD,MAAM,CAACE,OAAO,CAACC,aAAa,GAAG,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;EAC5E;EACA,OAAOL,MAAM;AACjB,CAAC;AAEDF,SAAS,CAACQ,YAAY,CAACC,OAAO,CAACC,GAAG,CAACT,eAAe,CAAC;AACnDP,KAAK,CAACc,YAAY,CAACC,OAAO,CAACC,GAAG,CAACT,eAAe,CAAC;AAE/C,SACIP,KAAK,EACLM,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}